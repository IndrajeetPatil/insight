% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_parameters_others.R
\name{get_parameters.betareg}
\alias{get_parameters.betareg}
\alias{get_parameters.DirichletRegModel}
\alias{get_parameters.averaging}
\alias{get_parameters.glmx}
\alias{get_parameters.clm2}
\title{Get model parameters from models with special components}
\usage{
\method{get_parameters}{betareg}(x, component = c("all", "conditional", "precision"), ...)

\method{get_parameters}{DirichletRegModel}(x, component = c("all", "conditional", "precision"), ...)

\method{get_parameters}{averaging}(x, component = c("conditional", "full"), ...)

\method{get_parameters}{glmx}(x, component = c("all", "conditional", "extra"), ...)

\method{get_parameters}{clm2}(x, component = c("all", "conditional", "scale"), ...)
}
\arguments{
\item{x}{A fitted model.}

\item{component}{Which type of parameters to return, such as parameters for the
 conditional model, the zero-inflated part of the model, the dispersion
 term, the instrumental variables or marginal effects be returned? Applies
 to models with zero-inflated and/or dispersion formula, or to models with
 instrumental variables (so called fixed-effects regressions), or models
 with marginal effects from \pkg{mfx}. May be abbreviated. Note that the
\emph{conditional} component is also called \emph{count} or \emph{mean}
component, depending on the model. There are two convenient shortcuts:
If \code{component = "location"}, location parameters such as \code{conditional},
\code{zero_inflated}, \code{smooth_terms}, or \code{instruments} are returned.
For \code{component = "distributional"} (or \code{"auxiliary"}), components
like \code{sigma}, \code{dispersion}, \code{beta} or \code{precision} (and
other auxiliary parameters) are returned.}

\item{...}{Currently not used.}
}
\value{
A data frame with three columns: the parameter names, the related
  point estimates and the component.
}
\description{
Returns the coefficients from a model.
}
\examples{
data(mtcars)
m <- lm(mpg ~ wt + cyl + vs, data = mtcars)
get_parameters(m)
}
