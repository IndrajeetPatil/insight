% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_predicted.R
\name{get_predicted}
\alias{get_predicted}
\title{Predicted values}
\usage{
get_predicted(x, newdata = NULL, ...)
}
\arguments{
\item{x}{A model.}

\item{newdata}{An optional data frame in which to look for variables with
    which to predict.  If omitted, the fitted values are used.}

\item{...}{Not used.}

\item{ci_type}{Can be \code{"prediction"} or \code{"confidence"}. Prediction intervals show the range that likely contains the value of a new observation (in what range it would fall), whereas confidence intervals reflect the uncertainty around the estimated parameters (and gives the range of the link; for instance of the regression line in a linear regressions). Prediction intervals account for both the uncertainty in the model's parameters, plus the random variation of the individual values. Thus, prediction intervals are always wider than confidence intervals. Moreover, prediction intervals will not necessarily become narrower as the sample size increases (as they do not reflect only the quality of the fit). This doesn't apply for GLMs, for which prediction intervals are somewhat useless (for instance, for a binomial model for which the dependent variable is a vector of 1s and 0s, the prediction interval is... \code{[0, 1]}).}

\item{ci}{The interval level (default \code{0.95}, i.e., 95\% CI).}

\item{transform}{Either \code{"response"} (default) or \code{"link"}. If "link", no transformation is applied and the values are on the scale of the linear predictors. If "response", the output is on the scale of the response variable. Thus for a default binomial model, "response" gives the predicted probabilities, and "link" makes predictions of log-odds (probabilities on logit scale).}
}
\value{
The fitted values (i.e. predictions for the response).
}
\description{
Returns values predicted by a model (i.e., fitted values). The Confidence/Credible
Intervals (CI) are stored as an attribute, which one can easily extract with
\code{as.data.frame()} (see examples below).
}
\note{
Currently, this function just calls \code{stats::fitted()}, but will
be extended to other objects that don't work with \code{stats::fitted()} in
future updates.
}
\examples{
data(mtcars)
x <- lm(mpg ~ cyl + hp, data = mtcars)
predicted <- get_predicted(x)
predicted

# Get CI
attributes(predicted)$CI_low # Or CI_high
as.data.frame(predicted)
}
