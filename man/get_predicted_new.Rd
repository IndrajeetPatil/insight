% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_predicted.R
\name{get_predicted_new}
\alias{get_predicted_new}
\alias{get_predicted_new.lm}
\alias{get_predicted_new.stanreg}
\title{Compute Model's Predictions}
\usage{
get_predicted_new(x, data = NULL, ...)

\method{get_predicted_new}{lm}(x, data = NULL, type = "response", iterations = NULL, ...)

\method{get_predicted_new}{stanreg}(
  x,
  data = NULL,
  type = "prediction",
  transform = "response",
  include_random = TRUE,
  include_smooth = TRUE,
  iterations = NULL,
  ...
)
}
\arguments{
\item{x}{A statistical model (can also be a data.frame, in which case the second argument has to be a model).}

\item{data}{An optional data frame in which to look for variables with which to predict. If omitted, the data used to fit the model is used.}

\item{...}{Other args to be passed for instance to \code{\link{get_predicted_ci}}.}

\item{type}{Can be \code{"response"} (default) or \code{"link"}. This is an important argument, read more about in the \strong{Details} section below.}

\item{iterations}{For Bayesian models, this corresponds to the number of posterior draws. If \code{NULL}, will return all the draws (one for each iteration of the model). For frequentist models, if not \code{NULL}, will generate bootstrapped draws, from which bootstrapped CIs will be computed.}
}
\value{
The fitted values (i.e. predictions for the response). For Bayesian or bootstrapped models (when \code{iterations != NULL}), this will be a dataframe with all iterations as columns (observations are still rows).
}
\description{
Compute Model's Predictions.
}
\details{
\subsection{Prediction type ("response" vs. "link")}{
This argument has different effects depending on the model.
\itemize{
  \item \strong{Linear models} - \code{lm()}: For linear models, this argument impacts mainly the nature of the uncertainty interval (CI). Prediction intervals (\code{type = "response"}) show the range that likely contains the value of a new observation (in what range it is likely to fall), whereas confidence intervals (\code{type = "link"}) reflect the uncertainty around the estimated parameters (and gives the range of uncertainty of the regression line). Prediction intervals account for both the uncertainty in the model's parameters, plus the random variation of the individual values. Thus, prediction intervals are always wider than confidence intervals. Moreover, prediction intervals will not necessarily become narrower as the sample size increases (as they do not reflect only the quality of the fit, but also the variability within the data).
  \item \strong{General Linear models} - \code{glm()}: For other types of models (e.g., \code{glm}), this argument ... prediction intervals are somewhat useless (for instance, for a binomial model for which the dependent variable is a vector of 1s and 0s, the prediction interval is... \code{[0, 1]})
}}
}
\examples{
data(mtcars)
x <- lm(mpg ~ cyl + hp, data = mtcars)
predictions <- get_predicted_new(x)
predictions


get_predicted_new(x, type = "link")

# Get CI
attributes(predictions)$CI_low # Or CI_high
as.data.frame(predictions) # To get everything

get_predicted_new(x, iterations = 100)

\donttest{
# Bayesian models
if (require("rstanarm") && require("bayestestR")) {
  x <- stan_glm(mpg ~ am, data = mtcars, refresh = 0)
  predictions <- get_predicted_new(x)
  predictions
  summary(predictions)
  bayestestR::reshape_iterations(predictions)
}}
}
\seealso{
get_predicted_ci
}
